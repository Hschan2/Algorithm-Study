/*
문제
어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다. 

6을 예로 들면

6 ÷ 1 = 6 … 0
6 ÷ 2 = 3 … 0
6 ÷ 3 = 2 … 0
6 ÷ 4 = 1 … 2
6 ÷ 5 = 1 … 1
6 ÷ 6 = 1 … 0

그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.

두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.

출력
첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 0을 출력하시오.

예제 입력 1 
6 3

예제 출력 1 
3

예제 입력 2 
25 4

예제 출력 2 
0

예제 입력 3 
2735 1

예제 출력 3 
1
*/

public class 약수 구하기 {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        
        // 약수로 구할 값, 원하는 인덱스 값 변수
        int N = sc.nextInt();
        int K = sc.nextInt();
        // 반복문 배열의 인덱스 값 변수
        int key = 1;
        // 약수를 담을 배열 변수, 변수 값 0으로 초기화
        int[] arr = new int[N + 1];
        Arrays.fill(arr, 0);
        
        sc.close();
        
        // 1부터 약수로 구할 값까지 반복
        for (int i = 1; i <= N; i++) {
            // 약수로 구할 값을 나누었을 때 몫이 0일 경우 => 약수
            if (N % i == 0) {
                // 인덱스 순서대로 해당 값을 배열에 추가
                arr[key] = i;
                // 배열 인덱스 +1
                key++;
            }
        }
        
        // 배열의 인덱스 값이 0일 경우 => 약수가 아닐 경우
        if (arr[K] == 0) {
            // 0 출력
            System.out.println(0);
        } else { // 반대로 약수일 경우
            // 해당 배열 인덱스에 들어가 있는 값 출력
            System.out.println(arr[K]);
        }
    }
}

